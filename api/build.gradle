plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}
ext {
    set('guava_version', "33.2.0-jre")
    set('querydsl_version', "5.0.0")
    set('persistence_version', "3.1.0")
}
repositories {
    mavenCentral()
}

dependencies {
    implementation platform("software.amazon.awssdk:bom:2.25.64")
    implementation 'software.amazon.awssdk:s3'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "com.google.guava:guava:${guava_version}"
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation "com.querydsl:querydsl-jpa:${querydsl_version}:jakarta"
    implementation "com.querydsl:querydsl-sql:${querydsl_version}"
    annotationProcessor "com.querydsl:querydsl-apt:${querydsl_version}:jakarta"

    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${persistence_version}"

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.named('test') {
    useJUnitPlatform()
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':test')) {
        test {
            enabled = false
        }
    }
}
kotlin {
    jvmToolchain(21)
}