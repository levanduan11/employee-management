name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.AWS_REGION }}

      - name: Build and push API Docker image
        id: build-and-push-api
        uses: docker/build-push-action@v2
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/employee-api:latest

      - name: Build and push UI Docker image
        id: build-and-push-ui
        uses: docker/build-push-action@v2
        with:
          context: ./ui
          file: ./ui/Dockerfile
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/employee-ui:latest

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Register new task definition
        id: task-def
        run: |
          aws ecs register-task-definition \
            --family ${{ secrets.ECS_TASK_DEFINITION }} \
            --container-definitions '[
              {
                "name": "employee-api",
                "image": "${{ secrets.ECR_REGISTRY }}/employee-api:latest",
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 8080,
                    "hostPort": 8080
                  }
                ]
              },
              {
                "name": "employee-ui",
                "image": "${{ secrets.ECR_REGISTRY }}/employee-ui:latest",
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 3000,
                    "hostPort": 3000
                  }
                ]
              }
            ]' \
            --region ${{ secrets.AWS_REGION }}

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --task-definition ${{ secrets.ECS_TASK_DEFINITION }} \
            --region ${{ secrets.AWS_REGION }}
          aws ecs wait services-stable --cluster ${{ secrets.ECS_CLUSTER_NAME }} --services ${{ secrets.ECS_SERVICE_NAME }} --region ${{ secrets.AWS_REGION }}
